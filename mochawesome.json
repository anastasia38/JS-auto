{
  "stats": {
    "suites": 11,
    "tests": 67,
    "passes": 66,
    "pending": 0,
    "failures": 1,
    "testsRegistered": 67,
    "passPercent": 98.50746268656717,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-08-24T14:45:03.144Z",
    "end": "2025-08-24T14:46:06.225Z",
    "duration": 63081
  },
  "results": [
    {
      "uuid": "3b2b9ed9-e381-41f0-b10c-6046ce04fae4",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/actions.cy.js",
      "file": "cypress/e2e/2-advanced-examples/actions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4460,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com');\ncy.get('.action-email').should('have.value', 'fake@email.com');\n// .type() with special character sequences\ncy.get('.action-email').type('{leftarrow}{rightarrow}{uparrow}{downarrow}');\ncy.get('.action-email').type('{del}{selectall}{backspace}');\n// .type() with key modifiers\ncy.get('.action-email').type('{alt}{option}'); // these are equivalent\ncy.get('.action-email').type('{ctrl}{control}'); // these are equivalent\ncy.get('.action-email').type('{meta}{command}{cmd}'); // these are equivalent\ncy.get('.action-email').type('{shift}');\n// Delay each keypress by 0.1 sec\ncy.get('.action-email').type('slow.typing@email.com', {\n  delay: 100\n});\ncy.get('.action-email').should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled')\n// Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n});\ncy.get('.action-disabled').should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "f0667162-4004-4c44-9c60-1a13d37f4ac7",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 291,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus();\ncy.get('.action-focus').should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "50607609-30e8-4cc4-92fc-53af31d27493",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 467,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur');\ncy.get('.action-blur').blur();\ncy.get('.action-blur').should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "c3a76a1c-cb85-4ea7-ae36-ba837683cc3f",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 574,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text');\ncy.get('.action-clear').should('have.value', 'Clear this text');\ncy.get('.action-clear').clear();\ncy.get('.action-clear').should('have.value', '');",
              "err": {},
              "uuid": "9eb78893-5d49-4220-b006-109b94844150",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 433,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit();\ncy.get('.action-form').next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "adb013dd-1cb3-4c39-a0a3-c56acf94cb70",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 1980,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click();\n// You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight');\n// .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas');\ncy.get('#action-canvas').click(80, 75); // click 80px on x coord and 75px on y coord\ncy.get('#action-canvas').click(170, 75);\ncy.get('#action-canvas').click(80, 165);\ncy.get('#action-canvas').click(100, 185);\ncy.get('#action-canvas').click(125, 190);\ncy.get('#action-canvas').click(150, 185);\ncy.get('#action-canvas').click(170, 165);\n// click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n});\n// Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "323d9eb7-e144-4a9c-9601-fc923ca63a0a",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 266,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick();\ncy.get('.action-div').should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "0da13549-ba2c-4281-bed9-e9dec6682ff5",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 236,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick();\ncy.get('.rightclick-action-div').should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "7f1a186e-bee0-473b-96c9-7161baf51501",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 801,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check();\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check();\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').should('be.checked');\n// .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1');\ncy.get('.action-radios [type=\"radio\"]').should('be.checked');\n// .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']);\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').should('be.checked');\n// Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n});\ncy.get('.action-checkboxes [disabled]').should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n});\ncy.get('.action-radios [type=\"radio\"]').should('be.checked');",
              "err": {},
              "uuid": "2ad02bf5-98a0-4adf-b274-3d451e48d5c0",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 851,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck();\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').should('not.be.checked');\n// .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1');\ncy.get('.action-check [type=\"checkbox\"]').uncheck('checkbox1');\ncy.get('.action-check [type=\"checkbox\"][value=\"checkbox1\"]').should('not.be.checked');\n// .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']);\ncy.get('.action-check [type=\"checkbox\"]').uncheck(['checkbox1', 'checkbox3']);\ncy.get('.action-check [type=\"checkbox\"][value=\"checkbox1\"]').should('not.be.checked');\ncy.get('.action-check [type=\"checkbox\"][value=\"checkbox3\"]').should('not.be.checked');\n// Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n});\ncy.get('.action-check [disabled]').should('not.be.checked');",
              "err": {},
              "uuid": "50e79b43-56c3-4451-92c7-51740c888977",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 846,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--');\n// Select option(s) with matching text content\ncy.get('.action-select').select('apples');\n// confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']);\ncy.get('.action-select-multiple')\n// when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas');\ncy.get('.action-select')\n// can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']);\ncy.get('.action-select-multiple').invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "e5a086db-9698-49db-9c8b-a589b0057499",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible');\n// scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView();\ncy.get('#scroll-horizontal button').should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible');\n// Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView();\ncy.get('#scroll-vertical button').should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible');\n// Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView();\ncy.get('#scroll-both button').should('be.visible');",
              "err": {},
              "uuid": "babcf36c-8536-44bb-8174-eb79b9bcaa2c",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25);\ncy.get('.trigger-input-range').trigger('change');\ncy.get('.trigger-input-range').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "e88e26d7-7ed9-4957-a176-4afa41bc48f9",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right');\n// or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250);\n// or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%');\n// control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n});\n// control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "4f465772-3ad3-4c4c-adff-864d8230a50f",
              "parentUUID": "4ff9e5a2-9c53-4f05-8383-50148a0907f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f0667162-4004-4c44-9c60-1a13d37f4ac7",
            "50607609-30e8-4cc4-92fc-53af31d27493",
            "c3a76a1c-cb85-4ea7-ae36-ba837683cc3f",
            "9eb78893-5d49-4220-b006-109b94844150",
            "adb013dd-1cb3-4c39-a0a3-c56acf94cb70",
            "323d9eb7-e144-4a9c-9601-fc923ca63a0a",
            "0da13549-ba2c-4281-bed9-e9dec6682ff5",
            "7f1a186e-bee0-473b-96c9-7161baf51501",
            "2ad02bf5-98a0-4adf-b274-3d451e48d5c0",
            "50e79b43-56c3-4451-92c7-51740c888977",
            "e5a086db-9698-49db-9c8b-a589b0057499",
            "babcf36c-8536-44bb-8174-eb79b9bcaa2c",
            "e88e26d7-7ed9-4957-a176-4afa41bc48f9",
            "4f465772-3ad3-4c4c-adff-864d8230a50f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13684,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "78730c73-7108-41cb-a6de-b709493bb13b",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/aliasing.cy.js",
      "file": "cypress/e2e/2-advanced-examples/aliasing.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7c444258-2f6d-4c6c-b071-d7094dd5438f",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 611,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn');\n// when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "6f3effec-da39-4fa0-bf4d-932e22eeda10",
              "parentUUID": "7c444258-2f6d-4c6c-b071-d7094dd5438f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1045,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "6259ae64-4d5d-4b30-80fb-7e1e5b098c80",
              "parentUUID": "7c444258-2f6d-4c6c-b071-d7094dd5438f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f3effec-da39-4fa0-bf4d-932e22eeda10",
            "6259ae64-4d5d-4b30-80fb-7e1e5b098c80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1656,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aec5fb3c-aaf6-4005-802c-e0bad5894803",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/assertions.cy.js",
      "file": "cypress/e2e/2-advanced-examples/assertions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "728503d6-f3e9-42f9-ae17-88f713a7b3d8",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d81c8df1-dc0e-45a4-9ceb-24805314e640",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 438,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first()\n// checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content')\n// chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td')\n// to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i);\n// a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last')\n// finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible');\n// for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents",
                  "err": {},
                  "uuid": "b1bd969e-c044-41dc-8d32-8ecc1f75c7c9",
                  "parentUUID": "d81c8df1-dc0e-45a4-9ceb-24805314e640",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 291,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "33e484c1-74b5-4750-8a8b-08819cfc72ea",
                  "parentUUID": "d81c8df1-dc0e-45a4-9ceb-24805314e640",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b1bd969e-c044-41dc-8d32-8ecc1f75c7c9",
                "33e484c1-74b5-4750-8a8b-08819cfc72ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 729,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "40a173ea-c556-4bf2-870a-ed8dac72d6e5",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 122,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be.true;\nconst o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n});\n// matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "d211929f-2a96-48fe-a44a-85b3c120f0d5",
                  "parentUUID": "40a173ea-c556-4bf2-870a-ed8dac72d6e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 130,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should($p => {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  const texts = $p.map((i, el) => Cypress.$(el).text());\n  // jquery map returns jquery object\n  // and .get() convert this to simple array\n  const paragraphs = texts.get();\n  // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3);\n  // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "7fd50c57-3430-48cc-a821-a648c9f045c0",
                  "parentUUID": "40a173ea-c556-4bf2-870a-ed8dac72d6e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 138,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div')\n// .should(cb) callback function will be retried\n.should($div => {\n  expect($div).to.have.length(1);\n  const className = $div[0].className;\n  expect(className).to.match(/heading-/);\n})\n// .then(cb) callback is not retried,\n// it either passes or fails\n.then($div => {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "080869fb-a721-44ab-aaf6-3455cc02222f",
                  "parentUUID": "40a173ea-c556-4bf2-870a-ed8dac72d6e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 148,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should($div => {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  const className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(`Could not find class \"heading-\" in ${className}`);\n  }\n});",
                  "err": {},
                  "uuid": "ae4377fb-d84e-49cb-affa-3264df7f88fb",
                  "parentUUID": "40a173ea-c556-4bf2-870a-ed8dac72d6e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 129,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nlet text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nconst normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\ncy.get('.two-elements').find('.first').then($first => {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should($div => {\n  // we can massage text before comparing\n  const secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "218c42d1-7c40-40d6-87e5-9e733554643b",
                  "parentUUID": "40a173ea-c556-4bf2-870a-ed8dac72d6e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 132,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "8678db97-744c-4041-8ed9-88c9881fc106",
                  "parentUUID": "40a173ea-c556-4bf2-870a-ed8dac72d6e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1630,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should($div => {\n  const n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "71112e28-afef-4daa-9343-28b2edeaf215",
                  "parentUUID": "40a173ea-c556-4bf2-870a-ed8dac72d6e5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d211929f-2a96-48fe-a44a-85b3c120f0d5",
                "7fd50c57-3430-48cc-a821-a648c9f045c0",
                "080869fb-a721-44ab-aaf6-3455cc02222f",
                "ae4377fb-d84e-49cb-affa-3264df7f88fb",
                "218c42d1-7c40-40d6-87e5-9e733554643b",
                "8678db97-744c-4041-8ed9-88c9881fc106",
                "71112e28-afef-4daa-9343-28b2edeaf215"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2429,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2ab4baa4-25c4-4445-a404-3444d9f434f7",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/connectors.cy.js",
      "file": "cypress/e2e/2-advanced-examples/connectors.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "620c5093-bb62-4f21-8dda-2cdd94c6a07e",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 387,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(($el, index, $list) => {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "35c43b74-b011-47f3-a4cc-9e19d27013ee",
              "parentUUID": "620c5093-bb62-4f21-8dda-2cdd94c6a07e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li')\n// calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "b3976022-652b-4da9-9159-e1f04b12ff65",
              "parentUUID": "620c5093-bb62-4f21-8dda-2cdd94c6a07e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\ncy.get('.connectors-div').should('be.hidden');\n// https://on.cypress.io/invoke\n// call the jquery method 'show' on the 'div.container'\ncy.get('.connectors-div').invoke('show');\ncy.get('.connectors-div').should('be.visible');",
              "err": {},
              "uuid": "b12db2fc-4029-49f0-8c3e-8d1f88aaf00c",
              "parentUUID": "620c5093-bb62-4f21-8dda-2cdd94c6a07e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nconst arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread((foo, bar, baz) => {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "f09d56ed-7e82-424e-a907-7821d37617be",
              "parentUUID": "620c5093-bb62-4f21-8dda-2cdd94c6a07e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "f923a063-6277-4f3a-ad37-91b9dfb0c49c",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 123,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then($lis => {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "bf0aec54-2d9c-4a03-abcc-4a57c6a48fcf",
                  "parentUUID": "f923a063-6277-4f3a-ad37-91b9dfb0c49c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 114,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  return 2;\n}).then(num => {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "d00c6002-60aa-4f20-943c-2c093852178e",
                  "parentUUID": "f923a063-6277-4f3a-ad37-91b9dfb0c49c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 117,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  // note that nothing is returned from this callback\n}).then(num => {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "4e96c6d2-bc04-4c1e-839c-1b2fce9b880a",
                  "parentUUID": "f923a063-6277-4f3a-ad37-91b9dfb0c49c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 116,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(num => {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "68b2d2fe-0499-45cd-bf9b-875fd5b7da21",
                  "parentUUID": "f923a063-6277-4f3a-ad37-91b9dfb0c49c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bf0aec54-2d9c-4a03-abcc-4a57c6a48fcf",
                "d00c6002-60aa-4f20-943c-2c093852178e",
                "4e96c6d2-bc04-4c1e-839c-1b2fce9b880a",
                "68b2d2fe-0499-45cd-bf9b-875fd5b7da21"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 470,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "35c43b74-b011-47f3-a4cc-9e19d27013ee",
            "b3976022-652b-4da9-9159-e1f04b12ff65",
            "b12db2fc-4029-49f0-8c3e-8d1f88aaf00c",
            "f09d56ed-7e82-424e-a907-7821d37617be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 865,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "977f7c9d-483e-4e2b-8692-5c7f06efc914",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/cookies.cy.js",
      "file": "cypress/e2e/2-advanced-examples/cookies.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4cf8d40e-97d7-4d2a-b574-f1ad5f4035fd",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 505,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click();\n// cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "d442259c-3fac-4dfe-a28f-c16996f137fb",
              "parentUUID": "4cf8d40e-97d7-4d2a-b574-f1ad5f4035fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies for the current domain",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies for the current domain",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click();\n// cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "4c27f5a5-9c8b-4dbe-bf56-f08ecdeeccbf",
              "parentUUID": "4cf8d40e-97d7-4d2a-b574-f1ad5f4035fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getAllCookies() - get all browser cookies",
              "fullTitle": "Cookies cy.getAllCookies() - get all browser cookies",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getallcookies\ncy.getAllCookies().should('be.empty');\ncy.setCookie('key', 'value');\ncy.setCookie('key', 'value', {\n  domain: '.example.com'\n});\n// cy.getAllCookies() yields an array of cookies\ncy.getAllCookies().should('have.length', 2).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'key');\n  expect(cookies[0]).to.have.property('value', 'value');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n  expect(cookies[1]).to.have.property('name', 'key');\n  expect(cookies[1]).to.have.property('value', 'value');\n  expect(cookies[1]).to.have.property('httpOnly', false);\n  expect(cookies[1]).to.have.property('secure', false);\n  expect(cookies[1]).to.have.property('domain', '.example.com');\n  expect(cookies[1]).to.have.property('path');\n});",
              "err": {},
              "uuid": "0953aee7-b49d-40f7-8888-7879f151c315",
              "parentUUID": "4cf8d40e-97d7-4d2a-b574-f1ad5f4035fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar');\n// cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "42255300-0d77-45af-a246-ce8d18c7f70e",
              "parentUUID": "4cf8d40e-97d7-4d2a-b574-f1ad5f4035fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC');\n// cy.clearCookies() yields null\ncy.clearCookie('token');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "7405bbf5-c0b8-4e76-a93f-dcb79c9d920e",
              "parentUUID": "4cf8d40e-97d7-4d2a-b574-f1ad5f4035fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies for the current domain",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies for the current domain",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1);\n// cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "d88e13a9-3e44-43e9-9609-e57d5aeabb7d",
              "parentUUID": "4cf8d40e-97d7-4d2a-b574-f1ad5f4035fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearAllCookies() - clear all browser cookies",
              "fullTitle": "Cookies cy.clearAllCookies() - clear all browser cookies",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearallcookies\ncy.getAllCookies().should('be.empty');\ncy.setCookie('key', 'value');\ncy.setCookie('key', 'value', {\n  domain: '.example.com'\n});\ncy.getAllCookies().should('have.length', 2);\n// cy.clearAllCookies() yields null\ncy.clearAllCookies();\ncy.getAllCookies().should('be.empty');",
              "err": {},
              "uuid": "c68d63f1-4423-4af5-9125-f2498768fa32",
              "parentUUID": "4cf8d40e-97d7-4d2a-b574-f1ad5f4035fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d442259c-3fac-4dfe-a28f-c16996f137fb",
            "4c27f5a5-9c8b-4dbe-bf56-f08ecdeeccbf",
            "0953aee7-b49d-40f7-8888-7879f151c315",
            "42255300-0d77-45af-a246-ce8d18c7f70e",
            "7405bbf5-c0b8-4e76-a93f-dcb79c9d920e",
            "d88e13a9-3e44-43e9-9609-e57d5aeabb7d",
            "c68d63f1-4423-4af5-9125-f2498768fa32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1516,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "621a06ed-243f-48d5-872b-2c9393286825",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/cypress_api.cy.js",
      "file": "cypress/e2e/2-advanced-examples/cypress_api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "beb50b4f-4b97-4c08-aea1-ecb320e20ca4",
          "title": "Cypress APIs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e771580e-4fde-4059-9fb0-6667ab028b3c",
              "title": "Cypress.Commands",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".add() - create a custom command",
                  "fullTitle": "Cypress APIs Cypress.Commands .add() - create a custom command",
                  "timedOut": null,
                  "duration": 501,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log';\n  // log the subject to the console\n  console[method]('The subject is', subject);\n  // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n});\ncy.get('button').console('info').then($button => {\n  // subject is still $button\n});",
                  "err": {},
                  "uuid": "5f3c1c49-098d-426e-b84c-e2d5b673183f",
                  "parentUUID": "e771580e-4fde-4059-9fb0-6667ab028b3c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f3c1c49-098d-426e-b84c-e2d5b673183f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 501,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1cb698cb-f3e2-4b0a-982b-c0463e1141ff",
              "title": "Cypress.Cookies",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".debug() - enable or disable debugging",
                  "fullTitle": "Cypress APIs Cypress.Cookies .debug() - enable or disable debugging",
                  "timedOut": null,
                  "duration": 151,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Cookies.debug(true);\n// Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
                  "err": {},
                  "uuid": "9df34605-a2b4-4698-9064-94ff0fc17385",
                  "parentUUID": "1cb698cb-f3e2-4b0a-982b-c0463e1141ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9df34605-a2b4-4698-9064-94ff0fc17385"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 151,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4d386e15-9e2b-42c5-88ca-ff04cf65a9ae",
              "title": "Cypress.arch",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get CPU architecture name of underlying OS",
                  "fullTitle": "Cypress APIs Cypress.arch Get CPU architecture name of underlying OS",
                  "timedOut": null,
                  "duration": 110,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
                  "err": {},
                  "uuid": "dcee3780-af85-43e3-b46e-478243e79c8e",
                  "parentUUID": "4d386e15-9e2b-42c5-88ca-ff04cf65a9ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dcee3780-af85-43e3-b46e-478243e79c8e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 110,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1fe87348-4561-43cc-a3db-edcb985f1f07",
              "title": "Cypress.config()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get and set configuration options",
                  "fullTitle": "Cypress APIs Cypress.config() Get and set configuration options",
                  "timedOut": null,
                  "duration": 356,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000);\n// this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
                  "err": {
                    "message": "AssertionError: expected { Object (reporter, reporterOptions, ...) } to have property 'baseUrl' of null, but got 'https://guest:welcome2qauto@qauto.forstudy.space/'",
                    "estack": "AssertionError: expected { Object (reporter, reporterOptions, ...) } to have property 'baseUrl' of null, but got 'https://guest:welcome2qauto@qauto.forstudy.space/'\n    at Context.eval (webpack://js-auto/./cypress/e2e/2-advanced-examples/cypress_api.cy.js:76:31)",
                    "diff": null
                  },
                  "uuid": "763040b2-abff-49f4-93f6-f73f60547f0e",
                  "parentUUID": "1fe87348-4561-43cc-a3db-edcb985f1f07",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "763040b2-abff-49f4-93f6-f73f60547f0e"
              ],
              "pending": [],
              "skipped": [],
              "duration": 356,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8c58553c-1a21-412f-8e0f-f7e180517283",
              "title": "Cypress.dom",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".isHidden() - determine if a DOM element is hidden",
                  "fullTitle": "Cypress APIs Cypress.dom .isHidden() - determine if a DOM element is hidden",
                  "timedOut": null,
                  "duration": 111,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0);\n// our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
                  "err": {},
                  "uuid": "3a73e425-8e7c-4791-b4b1-3b3b22bdcb31",
                  "parentUUID": "8c58553c-1a21-412f-8e0f-f7e180517283",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3a73e425-8e7c-4791-b4b1-3b3b22bdcb31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 111,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b2ab36cf-394a-4a99-893f-a60c31599ade",
              "title": "Cypress.env()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get environment variables",
                  "fullTitle": "Cypress APIs Cypress.env() Get environment variables",
                  "timedOut": null,
                  "duration": 117,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n});\n// get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local');\n// set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/');\n// get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
                  "err": {},
                  "uuid": "ad49e7f7-ba36-4b60-b13a-36b3fe0c4ac8",
                  "parentUUID": "b2ab36cf-394a-4a99-893f-a60c31599ade",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad49e7f7-ba36-4b60-b13a-36b3fe0c4ac8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 117,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "970f5c22-1a22-495b-add9-0983a29d5bef",
              "title": "Cypress.log",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Control what is printed to the Command Log",
                  "fullTitle": "Cypress APIs Cypress.log Control what is printed to the Command Log",
                  "timedOut": null,
                  "duration": 113,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/cypress-log",
                  "err": {},
                  "uuid": "e2b38b30-7fd9-442c-a39e-e70560f2217a",
                  "parentUUID": "970f5c22-1a22-495b-add9-0983a29d5bef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e2b38b30-7fd9-442c-a39e-e70560f2217a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 113,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8b6ebb67-8a14-426c-af79-858a0ce46b1c",
              "title": "Cypress.platform",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get underlying OS name",
                  "fullTitle": "Cypress APIs Cypress.platform Get underlying OS name",
                  "timedOut": null,
                  "duration": 116,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
                  "err": {},
                  "uuid": "67cf34bf-3975-49d8-bd50-b6f6e164dcd3",
                  "parentUUID": "8b6ebb67-8a14-426c-af79-858a0ce46b1c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "67cf34bf-3975-49d8-bd50-b6f6e164dcd3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 116,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "af7336ef-0bfd-4c40-9962-9629d32de3d3",
              "title": "Cypress.version",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get current version of Cypress being run",
                  "fullTitle": "Cypress APIs Cypress.version Get current version of Cypress being run",
                  "timedOut": null,
                  "duration": 148,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
                  "err": {},
                  "uuid": "51455907-6243-4332-982c-baabc04e26da",
                  "parentUUID": "af7336ef-0bfd-4c40-9962-9629d32de3d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "51455907-6243-4332-982c-baabc04e26da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 148,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c3c321ad-c6eb-41b8-bac6-104c53a46b98",
              "title": "Cypress.spec",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get current spec information",
                  "fullTitle": "Cypress APIs Cypress.spec Get current spec information",
                  "timedOut": null,
                  "duration": 114,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
                  "err": {},
                  "uuid": "c6798a4c-1fcd-404e-9ea7-3ca1c4e3805a",
                  "parentUUID": "c3c321ad-c6eb-41b8-bac6-104c53a46b98",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c6798a4c-1fcd-404e-9ea7-3ca1c4e3805a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 114,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "27e6cd9e-ca29-4b97-9c3b-fd7e63913256",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/files.cy.js",
      "file": "cypress/e2e/2-advanced-examples/files.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c9f32a76-ec20-49a5-ae41-eecced568a93",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 567,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "f8dd616a-8441-4bce-b6a3-281a2b95b116",
              "parentUUID": "c9f32a76-ec20-49a5-ae41-eecced568a93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample);\n// or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\ncy.wrap(this.example).should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "0976dd53-a462-476b-b079-c7e92f7901f2",
              "parentUUID": "c9f32a76-ec20-49a5-ae41-eecced568a93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile(Cypress.config('configFile')).then(config => {\n  expect(config).to.be.an('string');\n});",
              "err": {},
              "uuid": "f694f1a5-72b0-43f6-9a81-27f13f83804c",
              "parentUUID": "c9f32a76-ec20-49a5-ae41-eecced568a93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 339,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(users => {\n  expect(users[0].name).to.exist;\n});\n// JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(profile => {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "8d2230c9-121c-43dc-bf2a-238bf8f75d32",
              "parentUUID": "c9f32a76-ec20-49a5-ae41-eecced568a93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8dd616a-8441-4bce-b6a3-281a2b95b116",
            "0976dd53-a462-476b-b079-c7e92f7901f2",
            "f694f1a5-72b0-43f6-9a81-27f13f83804c",
            "8d2230c9-121c-43dc-bf2a-238bf8f75d32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "10f28ed9-ea10-483c-a3ec-f9051461ec81",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/location.cy.js",
      "file": "cypress/e2e/2-advanced-examples/location.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "030f5719-ab72-4ff6-a003-6b447cb45a0b",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 421,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "d6d37729-21e3-480c-833a-f8bf10b40ab0",
              "parentUUID": "030f5719-ab72-4ff6-a003-6b447cb45a0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(location => {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "398b8b5c-ea63-4812-beb4-25eba2f5b5a8",
              "parentUUID": "030f5719-ab72-4ff6-a003-6b447cb45a0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "b52c6a6b-9156-4f43-ad7c-7419c81c44cb",
              "parentUUID": "030f5719-ab72-4ff6-a003-6b447cb45a0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6d37729-21e3-480c-833a-f8bf10b40ab0",
            "398b8b5c-ea63-4812-beb4-25eba2f5b5a8",
            "b52c6a6b-9156-4f43-ad7c-7419c81c44cb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 682,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "17ea4498-e0b1-40d5-bc50-3af257643128",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/misc.cy.js",
      "file": "cypress/e2e/2-advanced-examples/misc.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "08a393b4-c870-4d6e-ae71-2dc7ea2408bc",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 616,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`);\n// on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nconst isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n}\n// cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\nconst isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec(`print ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n} else {\n  cy.exec(`cat ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "364c8e6c-0e0c-41e5-8403-a058b99d384c",
              "parentUUID": "08a393b4-c870-4d6e-ae71-2dc7ea2408bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "6e4822ee-850b-4855-ad1c-131a7de5b539",
              "parentUUID": "08a393b4-c870-4d6e-ae71-2dc7ea2408bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "63ddeca6-f534-44be-950f-5e5d9a19864b",
              "parentUUID": "08a393b4-c870-4d6e-ae71-2dc7ea2408bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "47db5968-f842-43b0-a8b3-497e01a5a1b0",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 1542,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "a38072ea-8551-4dee-a293-6e36d8f60c8c",
                  "parentUUID": "47db5968-f842-43b0-a8b3-497e01a5a1b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 112,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot() {},\n  onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "06c657c4-f609-4920-98cd-8d247b5bce75",
                  "parentUUID": "47db5968-f842-43b0-a8b3-497e01a5a1b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a38072ea-8551-4dee-a293-6e36d8f60c8c",
                "06c657c4-f609-4920-98cd-8d247b5bce75"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1654,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "364c8e6c-0e0c-41e5-8403-a058b99d384c",
            "6e4822ee-850b-4855-ad1c-131a7de5b539",
            "63ddeca6-f534-44be-950f-5e5d9a19864b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1029,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "97eb0b89-34a1-488e-b5e5-d7b7ecd02b8f",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/navigation.cy.js",
      "file": "cypress/e2e/2-advanced-examples/navigation.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b1363ed2-ed5e-46cf-bb45-b895de37d911",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 1163,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation');\n// clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation');\n// clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "f7b8d302-664c-44f1-8af6-68825b9fe93e",
              "parentUUID": "b1363ed2-ed5e-46cf-bb45-b895de37d911",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 508,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload();\n// reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "a7e20d7e-8c2e-4f7e-b059-669e3dbcbd3b",
              "parentUUID": "b1363ed2-ed5e-46cf-bb45-b895de37d911",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 393,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  },\n  onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  }\n});",
              "err": {},
              "uuid": "b164efd4-4113-4dc4-b401-ea5074369240",
              "parentUUID": "b1363ed2-ed5e-46cf-bb45-b895de37d911",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7b8d302-664c-44f1-8af6-68825b9fe93e",
            "a7e20d7e-8c2e-4f7e-b059-669e3dbcbd3b",
            "b164efd4-4113-4dc4-b401-ea5074369240"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2064,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cf75d0b6-aade-4c46-93aa-51441220ac2f",
      "title": "",
      "fullFile": "cypress/e2e/1-getting-started/todo.cy.js",
      "file": "cypress/e2e/1-getting-started/todo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "faef7fc0-0683-4148-8694-c8fa6973ff7c",
          "title": "Headers and Footer elements",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Displays all headers buttons",
              "fullTitle": "Headers and Footer elements Displays all headers buttons",
              "timedOut": null,
              "duration": 2497,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We use the `cy.get()` command to get all elements that match the selector.\n// Then, we use `should` to assert that there are two matched items,\n// which are the two default items.\n// cy.get('header button').should('have.length.at.least', 1)\n// We can go even further and check that the default todos each contain\n// the correct text. We use the `first` and `last` functions\n// to get just the first and last matched elements individually,\n// and then perform an assertion with `should`.\ncy.get('button.hero-descriptor_btn.btn.btn-primary', {\n  timeout: 15000\n}) /// works\n.each($btn => {\n  cy.wrap($btn).should('be.visible');\n});",
              "err": {},
              "uuid": "c56e255e-ec3c-4926-9a28-206e598f3a2f",
              "parentUUID": "faef7fc0-0683-4148-8694-c8fa6973ff7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find all footer links and buttons",
              "fullTitle": "Headers and Footer elements Find all footer links and buttons",
              "timedOut": null,
              "duration": 992,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We'll store our item text in a variable so we can reuse it\n// Let's get the input element and use the `type` command to\n// input our new list item. After typing the content of our item,\n// we need to type the enter key as well in order to submit the input.\n// This input has a data-test attribute so we'll use that to select the\n// element in accordance with best practices:\n// https://on.cypress.io/selecting-elements\ncy.get('footer').scrollIntoView();\ncy.wait(500); // пауза щоб все завантажилось\n//cy.get('footer a', {timeout: 1500}).each(($link) => {\n//  cy.wrap($link).should('be.visible')\n// })\ncy.get('.socials_icon.icon.icon-facebook', {\n  timeout: 15000\n}) // works\n.should('be.visible').each($el => {\n  cy.wrap($el).should('be.visible');\n});\ncy.get('a[href*=\"https://www.facebook.com/Hillel.IT.School\"]', {\n  timeout: 15000\n}) // works\n.should('be.visible').each($el => {\n  cy.wrap($el).should('be.visible');\n});\ncy.get('.socials_icon.icon.icon-telegram', {\n  timeout: 15000\n}) // works\n.should('be.visible').each($el => {\n  cy.wrap($el).should('be.visible');\n});\ncy.get('a[href*=\"https://t.me/ithillel_kyiv\"]', {\n  timeout: 15000\n}) // works\n.should('be.visible').each($el => {\n  cy.wrap($el).should('be.visible');\n});\ncy.get('.socials_icon.icon.icon-youtube', {\n  timeout: 15000\n}) // works\n.should('be.visible').each($el => {\n  cy.wrap($el).should('be.visible');\n});\ncy.get('a[href*=\"https://www.youtube.com/user/HillelITSchool?sub_confirmation=1\"]', {\n  timeout: 15000\n}) // works\n.should('be.visible').each($el => {\n  cy.wrap($el).should('be.visible');\n});\ncy.get('.socials_icon.icon.icon-instagram', {\n  timeout: 15000\n}) // works\n.should('be.visible').each($el => {\n  cy.wrap($el).should('be.visible');\n});\ncy.get('a[href*=\"https://www.instagram.com/hillel_itschool/\"]', {\n  timeout: 15000\n}) // works\n.should('be.visible').each($el => {\n  cy.wrap($el).should('be.visible');\n});\ncy.get('a[href*=\"https://www.linkedin.com/school/ithillel/\"]', {\n  timeout: 15000\n}).find('.socials_icon.icon.icon-linkedin').should('be.visible');\ncy.get('a[href*=\"ithillel.ua\"]', {\n  timeout: 15000\n}) // works\n.should('be.visible').each($el => {\n  cy.wrap($el).should('be.visible');\n});\ncy.contains('support@ithillel.ua', {\n  timeout: 15000\n}) // works\n.should('be.visible').each($el => {\n  cy.wrap($el).should('be.visible');\n});\n// cy.get('footer .footer d-flex align-items-center', {timeout: 15000}).each(($btn) => {\n//cy.wrap($btn).should('be.visible')\n//}) --- not working",
              "err": {},
              "uuid": "379d093c-edc8-4c3f-b1e2-bf32aa92b0e3",
              "parentUUID": "faef7fc0-0683-4148-8694-c8fa6973ff7c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c56e255e-ec3c-4926-9a28-206e598f3a2f",
            "379d093c-edc8-4c3f-b1e2-bf32aa92b0e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3489,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}